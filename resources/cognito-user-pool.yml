Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    # Makes sure to delete the resource when the stack is deleted
    DeletionPolicy: Delete
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${self:custom.cognito.user-pool}
      # Set email as an alias
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - CognitoUserPoolIdentityProvider
    # Makes sure to delete the resource when the stack is deleted
    DeletionPolicy: Delete
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:custom.cognito.user-pool-client}
      UserPoolId:
        Ref: CognitoUserPool
      # ExplicitAuthFlows:
      #   - ALLOW_ADMIN_USER_PASSWORD_AUTH
      #   - ALLOW_CUSTOM_AUTH
      #   - ALLOW_USER_SRP_AUTH
      #   - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - ${self:custom.cognito.user-pool-redirect-url}
      LogoutURLs:
        - ${self:custom.cognito.user-pool-redirect-url}
      DefaultRedirectURI: ${self:custom.cognito.user-pool-redirect-url}
      SupportedIdentityProviders:
        - COGNITO
        - Google

  CognitoUserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: Google
      AttributeMapping:
        family_name: family_name
        given_name: given_name
        username: sub
        picture: picture
        email: email
      ProviderDetails:
        client_id: ${self:custom.cognito.google-client-id}
        client_secret: ${self:custom.cognito.google-client-secret}
        authorize_scopes: profile email openid
      ProviderType: Google
      UserPoolId:
        Ref: CognitoUserPool

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId:
        Ref: CognitoUserPool
      Domain: ${self:custom.cognito.user-pool-subdomain}

# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
