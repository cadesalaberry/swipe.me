org: cadesalaberry
app: api-swipe-me
# serverless.yml

service: api-swipe-me

plugins:
  - serverless-dynamodb-local
  - serverless-offline  # should be last in list

custom:
  usersTableName: "users-table-${self:provider.stage}"
  decksTableName: "decks-table-${self:provider.stage}"
  endpoints:
    dynamodb-url: 'http://localhost:8000'
  dynamodb:
    start:
      migrate: true
      seed: true
    stages:
      - ${self:provider.stage}
    seed:
      development:
        sources:
          - table: ${self:custom.usersTableName}
            sources: [./seeds/users.json]
          - table: ${self:custom.decksTableName}
            sources: [./seeds/decks.json]

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
        - { "Fn::GetAtt": ["DecksDynamoDBTable", "Arn"] }

  environment:
    USERS_TABLE: ${self:custom.usersTableName}
    DECKS_TABLE: ${self:custom.decksTableName}
    DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb-url}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.usersTableName}
    DecksDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: deckId
            AttributeType: S
        KeySchema:
          -
            AttributeName: deckId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.decksTableName}
